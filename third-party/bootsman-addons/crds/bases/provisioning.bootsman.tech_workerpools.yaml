---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: workerpools.provisioning.bootsman.tech
spec:
  group: provisioning.bootsman.tech
  names:
    categories:
    - bootsman
    kind: WorkerPool
    listKind: WorkerPoolList
    plural: workerpools
    singular: workerpool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WorkerPool is the Schema for the workerpools API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkerPoolSpec defines the desired state of WorkerPool.
            properties:
              clusterName:
                type: string
              infrastructure:
                properties:
                  bareMetalProviderConfig:
                    properties:
                      bundleRepo:
                        type: string
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.


                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.


                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      selector:
                        description: |-
                          A label selector is a label query over a set of resources. The result of matchLabels and
                          matchExpressions are ANDed. An empty label selector matches all objects. A null
                          label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  brestProviderConfig:
                    description: MachineSpec defines the desired state of BrestMachine.
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      disk:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      providerID:
                        type: string
                      template:
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: One of the values of imageTemplate 'id' or 'name'
                            should be provided.
                          rule: (has(self.name) && !has(self.id)) || (!has(self.name)
                            && has(self.id))
                    required:
                    - cpu
                    - disk
                    - memory
                    - template
                    type: object
                  provider:
                    type: string
                  vkProviderConfig:
                    description: MachineSpec defines the desired state of VKMachine.
                    properties:
                      availabilityZone:
                        description: AvailabilityZone single duplicate for AvailabilityZones.
                        type: string
                      availabilityZones:
                        description: AvailabilityZones in which to launch the VM with
                          round-robin selection if multiple AZs provided.
                        items:
                          type: string
                        type: array
                      flavorRef:
                        description: FlavorRef is the name to the flavor that describes
                          the server's specs.
                        type: string
                      imageId:
                        description: |-
                          OS Image ID
                          Image ID to be used to create VM.
                        type: string
                      providerID:
                        type: string
                      volumeSize:
                        description: VolumeSize is the size of the volume to create
                          (in gigabytes).
                        type: integer
                      volumeType:
                        description: VolumeType is the volume type of the block device.
                        type: string
                    required:
                    - flavorRef
                    - imageId
                    type: object
                  vsphereConfig:
                    properties:
                      cluster:
                        type: string
                      datacenter:
                        type: string
                      datastore:
                        type: string
                      folder:
                        type: string
                      gpu:
                        properties:
                          device:
                            description: TODO Make map with possible devices(reuse
                              from gpu operator)
                            type: string
                          vendor:
                            type: string
                        required:
                        - device
                        - vendor
                        type: object
                      insecureFlag:
                        type: boolean
                      networkName:
                        type: string
                      resource:
                        properties:
                          diskGiB:
                            format: int32
                            type: integer
                          memoryMiB:
                            format: int64
                            type: integer
                          numCPUs:
                            format: int32
                            type: integer
                        required:
                        - diskGiB
                        - memoryMiB
                        - numCPUs
                        type: object
                      serverAddress:
                        type: string
                      template:
                        type: string
                    required:
                    - datacenter
                    - datastore
                    - folder
                    - insecureFlag
                    - networkName
                    - resource
                    - serverAddress
                    - template
                    type: object
                  yandexConfig:
                    properties:
                      cores:
                        format: int64
                        type: integer
                      diskSize:
                        format: int64
                        type: integer
                      diskType:
                        type: string
                      gpus:
                        format: int64
                        type: integer
                      imageId:
                        type: string
                      memory:
                        format: int64
                        type: integer
                      platformId:
                        type: string
                    required:
                    - cores
                    - diskSize
                    - diskType
                    - imageId
                    - memory
                    - platformId
                    type: object
                required:
                - provider
                type: object
              kubeletExtraArgs:
                properties:
                  evictionHard:
                    type: string
                  evictionMaxPodGracePeriod:
                    type: string
                  evictionMinimumReclaim:
                    type: string
                  kubeReserved:
                    type: string
                  maxPods:
                    type: string
                  seccompDefault:
                    type: string
                  systemReserved:
                    type: string
                type: object
              kubernetesVersion:
                type: string
              replicas:
                format: int32
                type: integer
            required:
            - clusterName
            - infrastructure
            - kubernetesVersion
            - replicas
            type: object
          status:
            description: WorkerPoolStatus defines the observed state of WorkerPool.
            properties:
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              currentVersion:
                properties:
                  bootsmanctlVersion:
                    type: string
                  kubeVersion:
                    type: string
                  museumVersion:
                    type: string
                type: object
              machineDeploymentRef:
                description: |-
                  ObjectReference contains enough information to let you inspect or modify the referred object.
                  ---
                  New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                   1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                   2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                      Those cannot be well described when embedded.
                   3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                   4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                      and the version of the actual struct is irrelevant.
                   5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                      will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                  Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                  For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              observedGeneration:
                format: int64
                type: integer
              replicas:
                description: |-
                  Total number of non-terminated machines targeted by the MachineDeployment
                  (their labels match the selector).
                format: int32
                type: integer
              selector:
                description: |-
                  Selector is the same as the label selector but in the string format to avoid introspection
                  by clients. The string will be in the same format as the query-param syntax.
                  More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
